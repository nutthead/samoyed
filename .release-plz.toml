# ============================================================================
# release-plz Configuration
# ============================================================================
# Automated release management with smart version bumping and changelog
# generation based on conventional commits.
#
# Features:
# - Automatic PR creation with version bumps
# - Changelog generation using git-cliff
# - Dependency updates
# - Workspace support (single crate in this case)
# - GitHub release creation

[workspace]
# Enable dependency updates in release PRs
dependencies_update = true

# Allow dirty working directory (useful for CI)
allow_dirty = false

# Update the changelog using the git-cliff template
changelog_update = true

# PR body template
pr_body = """
## 🚀 Release PR for v{{ releases[0].next_version }}

This PR was automatically created by [release-plz](https://github.com/MarcoIeni/release-plz) and contains:

### 📦 Version Updates
- **{{ releases[0].package }}**: `{{ releases[0].previous_version }}` → `{{ releases[0].next_version }}`

### 📝 Changelog
{% if releases[0].changelog is defined and releases[0].changelog | length > 0 %}
{{ releases[0].changelog }}
{% else %}
No changelog entries for this release.
{% endif %}

{% if releases[0].breaking_changes is defined and releases[0].breaking_changes | length > 0 %}
### ⚠️ Breaking Changes
```text
{{ releases[0].breaking_changes }}
```
{% endif %}

### ✅ Checklist
- [ ] Version bump looks correct
- [ ] Changelog entries are accurate
- [ ] All CI checks pass
- [ ] Breaking changes are properly documented

### 🔄 Merge Instructions
When you merge this PR, the following will happen automatically:
1. A new git tag `v{{ releases[0].next_version }}` will be created
2. GitHub release will be published with binaries
3. The crate will be published to crates.io
4. Attestations and signatures will be generated

---
*This is an automated PR. Please review carefully before merging.*
"""

# ============================================================================
# Package-specific configuration
# ============================================================================
[[package]]
name = "samoyed"
changelog_path = "CHANGELOG.md"
publish = true
release = true

# ============================================================================
# Changelog configuration powered by git-cliff
# ============================================================================
[changelog]
header = """
# Changelog

All notable changes to this project will be documented in this file.

The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.1.0/),
and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).
"""

body = """
{% if version %}
    ## [{{ version | trim_start_matches(pat="v") }}] - {{ timestamp | date(format="%Y-%m-%d") }}
{% else %}
    ## [Unreleased]
{% endif %}

{% for group, commits in commits | group_by(attribute="group") %}
    ### {{ group | upper_first }}
    {% for commit in commits %}
        - {% if commit.breaking %}[**breaking**] {% endif %}{{ commit.message | upper_first | trim }}{% if commit.github.username %} by @{{ commit.github.username }}{% endif %}
    {% endfor %}
{% endfor %}

{% if version and previous.version %}
[{{ version | trim_start_matches(pat="v") }}]: https://github.com/nutthead/samoyed/compare/{{ previous.version }}..{{ version }}
{% endif %}

<!-- generated by release-plz + git-cliff -->
"""

trim = true
protect_breaking_commits = true
# Match stable tags like v1.2.3 and ignore pre-release suffixes
tag_pattern = "^v\\d+\\.\\d+\\.\\d+$"
sort_commits = "oldest"
commit_preprocessors = [
  # Remove issue numbers from commits
  { pattern = '\\((\\w+\\s)?#([0-9]+)\\)', replace = "" },
  # Remove PR numbers from commits
  { pattern = '\\s*\\(#[0-9]+\\)$', replace = "" },
]
commit_parsers = [
  { message = "^feat", group = "⭐ Features" },
  { message = "^fix", group = "🐛 Bug Fixes" },
  { message = "^doc", group = "📚 Documentation" },
  { message = "^perf", group = "⚡ Performance" },
  { message = "^refactor", group = "🔨 Refactor" },
  { message = "^style", group = "🎨 Styling" },
  { message = "^test", group = "🧪 Testing" },
  { message = "^chore\\(release\\):", skip = true },
  { message = "^chore\\(deps\\)", skip = true },
  { message = "^chore\\(deps-dev\\)", skip = true },
  { message = "^chore\\(pr\\)", skip = true },
  { message = "^chore\\(pull\\)", skip = true },
  { message = "^chore", group = "🧹 Miscellaneous" },
  { body = ".*security", group = "🔐 Security" },
  { message = "^revert", group = "⏪ Reverts" },
  { message = "^build", group = "📦 Build System" },
  { message = "^ci", group = "👷 CI/CD" },
]
