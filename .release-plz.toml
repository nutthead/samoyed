# ============================================================================
# release-plz Configuration
# ============================================================================
# Automated release management with smart version bumping and changelog
# generation based on conventional commits.
#
# Features:
# - Automatic PR creation with version bumps
# - Changelog generation using git-cliff
# - Dependency updates
# - Workspace support (single crate in this case)
# - GitHub release creation

[workspace]
# Enable dependency updates in release PRs
dependencies_update = true

# Allow dirty working directory (useful for CI)
allow_dirty = false

# Disable initial changelog generation (we'll use git-cliff)
changelog_update = true

# Commit message format for version bumps
version_commit_message = "chore(release): prepare for v{{version}}"

# PR title format
pr_title = "chore(release): prepare v{{version}}"

# PR body template
pr_body = """
## 🚀 Release PR for v{{version}}

This PR was automatically created by [release-plz](https://github.com/MarcoIeni/release-plz) and contains:

### 📦 Version Updates
- **samoyed**: `{{prev_version}}` → `{{version}}`

### 📝 Changelog
{{changelog}}

### ✅ Checklist
- [ ] Version bump looks correct
- [ ] Changelog entries are accurate
- [ ] All CI checks pass
- [ ] Breaking changes are properly documented

### 🔄 Merge Instructions
When you merge this PR, the following will happen automatically:
1. A new git tag `v{{version}}` will be created
2. GitHub release will be published with binaries
3. The crate will be published to crates.io
4. Attestations and signatures will be generated

---
*This is an automated PR. Please review carefully before merging.*
"""

# ============================================================================
# Package-specific configuration
# ============================================================================
[[package]]
name = "samoyed"

# Changelog configuration using git-cliff
changelog_include = ["samoyed"]
changelog_path = "CHANGELOG.md"

# Use git-cliff for changelog generation
[package.git_cliff]
# git-cliff configuration embedded here
header = """
# Changelog

All notable changes to this project will be documented in this file.

The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.1.0/),
and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).
"""

body = """
{% if version %}\
    ## [{{ version | trim_start_matches(pat="v") }}] - {{ timestamp | date(format="%Y-%m-%d") }}
{% else %}\
    ## [Unreleased]
{% endif %}\
{% for group, commits in commits | group_by(attribute="group") %}
    ### {{ group | upper_first }}
    {% for commit in commits %}
        - {% if commit.breaking %}[**breaking**] {% endif %}{{ commit.message | upper_first | trim }}{% if commit.github.username %} by @{{ commit.github.username }}{% endif %}\
    {% endfor %}
{% endfor %}\n
"""

footer = """
{% for release in releases -%}
    {% if release.version -%}
        {% if release.previous.version -%}
            [{{ release.version | trim_start_matches(pat="v") }}]: \
                https://github.com/nutthead/samoyed/compare/{{ release.previous.version }}..{{ release.version }}
        {% endif -%}
    {% endif -%}
{% endfor %}

<!-- generated by git-cliff via release-plz -->
"""

trim = true

[package.git_cliff.git]
# Conventional commits parsing
conventional_commits = true
filter_unconventional = false
split_commits = false
commit_preprocessors = [
  # Remove issue numbers from commits
  { pattern = '\((\w+\s)?#([0-9]+)\)', replace = "" },
  # Remove PR numbers from commits
  { pattern = '\s*\(#[0-9]+\)$', replace = "" },
]
commit_parsers = [
  { message = "^feat", group = "⭐ Features" },
  { message = "^fix", group = "🐛 Bug Fixes" },
  { message = "^doc", group = "📚 Documentation" },
  { message = "^perf", group = "⚡ Performance" },
  { message = "^refactor", group = "🔨 Refactor" },
  { message = "^style", group = "🎨 Styling" },
  { message = "^test", group = "🧪 Testing" },
  { message = "^chore\\(release\\):", skip = true },
  { message = "^chore\\(deps\\)", skip = true },
  { message = "^chore\\(deps-dev\\)", skip = true },
  { message = "^chore\\(pr\\)", skip = true },
  { message = "^chore\\(pull\\)", skip = true },
  { message = "^chore", group = "🧹 Miscellaneous" },
  { body = ".*security", group = "🔐 Security" },
  { message = "^revert", group = "⏪ Reverts" },
  { message = "^build", group = "📦 Build System" },
  { message = "^ci", group = "👷 CI/CD" },
]
protect_breaking_commits = true
filter_commits = false
tag_pattern = "v[0-9]*"
skip_tags = ""
ignore_tags = "rc|beta|alpha"
topo_order = false
sort_commits = "oldest"

# ============================================================================
# Release configuration
# ============================================================================
[package.release]
# Publish to crates.io
publish = true

# Create GitHub releases
release = true

# Push to the default branch
push = true

# Push tags
push_tags = true

# Sign commits and tags
sign_commit = false
sign_tag = false

# ============================================================================
# Version bump rules
# ============================================================================
# Based on conventional commits and breaking changes
[package.version]
# Don't bump version if only chore commits
ignore_chore = true

# Version source (Cargo.toml)
source = "cargo"

# Semantic versioning rules
[package.semver]
# Breaking changes trigger major version bump (unless pre-1.0)
breaking_always_major = false

# Feature commits trigger minor version bump
features_always_minor = true

# All other commits trigger patch version bump
patches_always_patch = true