# ============================================================================
# Release-plz Tag Creation Workflow
# ============================================================================
# This workflow runs when release PRs are merged and creates the actual release
# tags using release-plz, which then triggers the main release workflow.

name: Release-plz Tag

on:
  push:
    branches: [master]

# Permissions needed to create tags
permissions:
  contents: write

env:
  RUST_VERSION: "1.90.0"
  CARGO_TERM_COLOR: always

jobs:
  release-tag:
    name: Create Release Tag
    runs-on: ubuntu-latest
    # Only run when a release PR is merged (detected by version bump in Cargo.toml)
    if: |
      github.event.pusher.name != 'github-actions[bot]' &&
      !contains(github.event.head_commit.message, '[skip ci]')
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check for version change
        id: check
        run: |
          # Check if Cargo.toml was modified in this commit
          if git diff HEAD~1 HEAD --name-only | grep -q "^Cargo.toml$"; then
            # Extract versions
            PREV_VERSION=$(git show HEAD~1:Cargo.toml | grep '^version' | head -1 | cut -d'"' -f2)
            CURR_VERSION=$(grep '^version' Cargo.toml | head -1 | cut -d'"' -f2)

            if [[ "$PREV_VERSION" != "$CURR_VERSION" ]]; then
              echo "Version changed from $PREV_VERSION to $CURR_VERSION"
              echo "should_release=true" >> "$GITHUB_OUTPUT"
              echo "version=$CURR_VERSION" >> "$GITHUB_OUTPUT"
            else
              echo "No version change detected"
              echo "should_release=false" >> "$GITHUB_OUTPUT"
            fi
          else
            echo "Cargo.toml not modified"
            echo "should_release=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Install Rust toolchain
        if: steps.check.outputs.should_release == 'true'
        uses: actions-rust-lang/setup-rust-toolchain@2fcdc490d667999e01ddbbf0f2823181beef6b39 # v1.15.0
        with:
          toolchain: 1.90.0

      - name: Setup Rust cache
        if: steps.check.outputs.should_release == 'true'
        uses: Swatinem/rust-cache@23bce251a8cd2ffc3c1075eaa2367cf899916d84 # v2.7.3
        with:
          cache-on-failure: true
          prefix-key: "v2-rust"
          key: release-plz

      - name: Run release-plz release
        if: steps.check.outputs.should_release == 'true'
        uses: MarcoIeni/release-plz-action@acb9246af4d59a270d1d4058a8b9af8c3f3a2559 # v0.5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        with:
          command: release
